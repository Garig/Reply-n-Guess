security:
    role_hierarchy:
        ROLE_USER: [ROLE_USER]
        ROLE_MODERATOR: [ROLE_MODERATOR, ROLE_USER]
        ROLE_ADMIN: [ROLE_ADMIN, ROLE_MODERATOR, ROLE_USER]

    encoders:
        App\Entity\User:
            algorithm: bcrypt
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        our_db_provider:
            entity:
                class: App\Entity\User
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /login_check
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false
            logout:
                path: /logout
                target: /
        
        api:
            pattern:  ^/api/jwt
            stateless: true
            anonymous: false
            provider: our_db_provider
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator        
                
        main:
            anonymous: true
            pattern:    ^/
            provider: our_db_provider
            

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/api, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }